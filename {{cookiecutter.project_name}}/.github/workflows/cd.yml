name: cd

on:
  workflow_dispatch:

jobs:
  cd:

    runs-on: ubuntu-latest

    steps:
    {%- if cookiecutter.packaging_strategy == '440' %}
    - uses: actions/github-script@v3.1.0
      if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop'
      with:
        script: |
            branch = process.env.GITHUB_REF.split("/").slice(-1)[0]
            core.setFailed(`${branch} is not allowed`)
    {%- endif %}
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '{{cookiecutter.python_version}}' # https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json
    # https://pipenv-fork.readthedocs.io/en/latest/advanced.html#using-pipenv-for-deployments
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel pipenv twine
        pipenv sync --dev
      env:
        {%- raw %}
        AZURE_DEVOPS_PAT: '${{ secrets.AZURE_DEVOPS_PAT }}'
        {%- endraw %}
    - name: isort
      run: |
        pipenv run isort . --check-only --diff
    # https://github.com/psf/black/issues/1664
    - name: black
      run: |
        pipenv run black . --check
    - name: flake8
      run: |
        pipenv run flake8
    - name: mypy
      run: |
        pipenv run mypy .
    - name: tests
      run: |
        pipenv run test
    # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
    - name: Version suffix
    {%- if cookiecutter.packaging_strategy == '440' %}    
      if: github.ref == 'refs/heads/develop'
      run: |
        echo "VERSION_SUFFIX=dev" >> $env:GITHUB_ENV
      shell: pwsh
    {%- else %}
      if: github.ref != 'refs/heads/main'
      run: |
        {%- raw %}
        $branch = "${{ github.ref }}"
        {%- endraw %}
        $suffix = $branch.Substring($branch.LastIndexOf("/") + 1)
        echo "PACKAGE_SUFFIX=$suffix" >> $env:GITHUB_ENV
    {%- endif %}
    - name: Publish
      run: |
        .\publish.ps1
      shell: pwsh
    # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-output-parameter
    - name: Get wheel version
      id: version
      run: |
        $name = Get-ChildItem .\dist\ -Filter *.whl | Sort-Object LastWriteTime -Descending | Select-Object -ExpandProperty Name -First 1
        $name = $name.Substring("{{cookiecutter.project_name}}-".Length)
        $wheelVersion = $name.Substring(0, $name.IndexOf("-py3"))
        echo "::set-output name=wheel_version::$wheelVersion"
      shell: pwsh
    # - name: Upload a Build Artifact
    #   uses: actions/upload-artifact@v2.2.2
    #   with:
    #     path: dist
    - name: Upload package
      run: |
        twine upload dist/* --repository-url https://pkgs.dev.azure.com/{{cookiecutter.azure_devops_organization_name}}/{{cookiecutter.azure_devops_team_project_name}}/_packaging/{{cookiecutter.azure_devops_feed_name}}/pypi/upload --skip-existing
      env:
        {%- raw %}
        TWINE_USERNAME: 'N/A'
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        {%- endraw %}
    - name: Version tag
      uses: actions/github-script@v3.1.0
      with:
        script: |
          github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/tags/${process.env.PUBLISHED_VERSION}`,
            sha: context.sha
          })
      env:
        {%- raw %}
        PUBLISHED_VERSION: ${{ steps.version.outputs.wheel_version }}
        {%- endraw %}
      continue-on-error: true
